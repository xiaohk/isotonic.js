const A="undefined"!=typeof BigUint64Array,Q=Symbol(),E=new TextDecoder("utf-16le");function B(A,Q){const B=new Uint32Array(A)[Q+-4>>>2]>>>1,g=new Uint16Array(A,Q,B);return B<=32?String.fromCharCode.apply(String,g):E.decode(g)}function g(A){const Q={};function E(A,Q){return A?B(A.buffer,Q):"<yet unknown>"}const g=A.env=A.env||{};return g.abort=g.abort||function(A,B,I,C){const t=Q.memory||g.memory;throw Error(`abort: ${E(t,A)} at ${E(t,B)}:${I}:${C}`)},g.trace=g.trace||function(A,B,...I){const C=Q.memory||g.memory;console.log(`trace: ${E(C,A)}${B?" ":""}${I.slice(0,B).join(", ")}`)},g.seed=g.seed||Date.now,A.Math=A.Math||Math,A.Date=A.Date||Date,Q}const I=function(){throw Error("Operation requires compiling with --exportRuntime")};function C(Q,E){const g=E.exports,C=g.memory,t=g.table,r=g.__new||I,n=g.__pin||I,e=g.__unpin||I,R=g.__collect||I,o=g.__rtti_base,s=o?function(A){return A[o>>>2]}:I;function a(A){const Q=function(A){const Q=new Uint32Array(C.buffer);if((A>>>=0)>=s(Q))throw Error(`invalid id: ${A}`);return Q[(o+4>>>2)+2*A]}(A);if(!(7&Q))throw Error(`not an array: ${A}, flags=${Q}`);return Q}function w(A){const Q=new Uint32Array(C.buffer);if((A>>>=0)>=s(Q))throw Error(`invalid id: ${A}`);return Q[(o+4>>>2)+2*A+1]}function D(A){return 31-Math.clz32(A>>>6&31)}function c(A,Q,E){const B=C.buffer;if(E)switch(A){case 2:return new Float32Array(B);case 3:return new Float64Array(B)}else switch(A){case 0:return new(Q?Int8Array:Uint8Array)(B);case 1:return new(Q?Int16Array:Uint16Array)(B);case 2:return new(Q?Int32Array:Uint32Array)(B);case 3:return new(Q?BigInt64Array:BigUint64Array)(B)}throw Error(`unsupported align: ${A}`)}function y(A){const Q=new Uint32Array(C.buffer),E=a(Q[A+-8>>>2]),B=D(E);let g=4&E?A:Q[A+4>>>2];const I=2&E?Q[A+12>>>2]:Q[g+-4>>>2]>>>B;return c(B,2048&E,4096&E).subarray(g>>>=B,g+I)}function M(A,Q,E){return new A(F(A,Q,E))}function F(A,Q,E){const B=C.buffer,g=new Uint32Array(B),I=g[E+4>>>2];return new A(B,I,g[I+-4>>>2]>>>Q)}function U(A,E,B){Q[`__get${E}`]=M.bind(null,A,B),Q[`__get${E}View`]=F.bind(null,A,B)}return Q.__new=r,Q.__pin=n,Q.__unpin=e,Q.__collect=R,Q.__newString=function(A){if(null==A)return 0;const Q=A.length,E=r(Q<<1,1),B=new Uint16Array(C.buffer);for(var g=0,I=E>>>1;g<Q;++g)B[I+g]=A.charCodeAt(g);return E},Q.__getString=function(A){if(!A)return null;const Q=C.buffer;if(1!==new Uint32Array(Q)[A+-8>>>2])throw Error(`not a string: ${A}`);return B(Q,A)},Q.__newArray=function(A,Q){const E=a(A),B=D(E),g=Q.length,I=r(g<<B,4&E?A:0);let t;if(4&E)t=I;else{n(I);const Q=r(2&E?16:12,A);e(I);const i=new Uint32Array(C.buffer);i[Q+0>>>2]=I,i[Q+4>>>2]=I,i[Q+8>>>2]=g<<B,2&E&&(i[Q+12>>>2]=g),t=Q}const i=c(B,2048&E,4096&E);if(16384&E)for(let A=0;A<g;++A){const E=Q[A];i[(I>>>B)+A]=E}else i.set(Q,I>>>B);return t},Q.__getArrayView=y,Q.__getArray=function(A){const Q=y(A),E=Q.length,B=new Array(E);for(let A=0;A<E;A++)B[A]=Q[A];return B},Q.__getArrayBuffer=function(A){const Q=C.buffer,E=new Uint32Array(Q)[A+-4>>>2];return Q.slice(A,A+E)},[Int8Array,Uint8Array,Uint8ClampedArray,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array].forEach((A=>{U(A,A.name,31-Math.clz32(A.BYTES_PER_ELEMENT))})),A&&[BigUint64Array,BigInt64Array].forEach((A=>{U(A,A.name.slice(3),3)})),Q.__instanceof=function(A,Q){const E=new Uint32Array(C.buffer);let B=E[A+-8>>>2];if(B<=s(E))do{if(B==Q)return!0;B=w(B)}while(B);return!1},Q.memory=Q.memory||C,Q.table=Q.table||t,i(g,Q)}function t(A){return"undefined"!=typeof Response&&A instanceof Response}function r(A){return A instanceof WebAssembly.Module}async function n(A,Q={}){if(t(A=await A))return e(A,Q);const E=r(A)?A:await WebAssembly.compile(A),B=g(Q),I=await WebAssembly.instantiate(E,Q);return{module:E,instance:I,exports:C(B,I)}}async function e(A,Q={}){if(!WebAssembly.instantiateStreaming)return n(t(A=await A)?A.arrayBuffer():A,Q);const E=g(Q),B=await WebAssembly.instantiateStreaming(A,Q),I=C(E,B.instance);return{...B,exports:I}}function i(A,E={}){const B=A.__argumentsLength?Q=>{A.__argumentsLength.value=Q}:A.__setArgumentsLength||A.__setargc||(()=>{});for(let g in A){if(!Object.prototype.hasOwnProperty.call(A,g))continue;const I=A[g];let C=g.split("."),t=E;for(;C.length>1;){let A=C.shift();Object.prototype.hasOwnProperty.call(t,A)||(t[A]={}),t=t[A]}let r=C[0],n=r.indexOf("#");if(n>=0){const E=r.substring(0,n),C=t[E];if(void 0===C||!C.prototype){const A=function(...Q){return A.wrap(A.prototype.constructor(0,...Q))};A.prototype={valueOf(){return this[Q]}},A.wrap=function(E){return Object.create(A.prototype,{[Q]:{value:E,writable:!1}})},C&&Object.getOwnPropertyNames(C).forEach((Q=>Object.defineProperty(A,Q,Object.getOwnPropertyDescriptor(C,Q)))),t[E]=A}if(r=r.substring(n+1),t=t[E].prototype,/^(get|set):/.test(r)){if(!Object.prototype.hasOwnProperty.call(t,r=r.substring(4))){let E=A[g.replace("set:","get:")],B=A[g.replace("get:","set:")];Object.defineProperty(t,r,{get(){return E(this[Q])},set(A){B(this[Q],A)},enumerable:!0})}}else"constructor"===r?(t[r]=(...A)=>(B(A.length),I(...A))).original=I:(t[r]=function(...A){return B(A.length),I(this[Q],...A)}).original=I}else/^(get|set):/.test(r)?Object.prototype.hasOwnProperty.call(t,r=r.substring(4))||Object.defineProperty(t,r,{get:A[g.replace("set:","get:")],set:A[g.replace("get:","set:")],enumerable:!0}):"function"==typeof I&&I!==B?(t[r]=(...A)=>(B(A.length),I(...A))).original=I:t[r]=I}return E}var R={instantiate:n,instantiateSync:function(A,Q={}){const E=r(A)?A:new WebAssembly.Module(A),B=g(Q),I=new WebAssembly.Instance(E,Q);return{module:E,instance:I,exports:C(B,I)}},instantiateStreaming:e,demangle:i};const o=A=>R.instantiate(fetch("data:application/octet-binary;base64,").then((A=>A.arrayBuffer())),{}).then((({exports:Q})=>{const E=Q,B=E.__pin,g=E.__unpin,I=E.__newArray,C=E.__getArray;return new class{iso;constructor({yMin:A=-1/0,yMax:Q=1/0,increasing:g=!0,clipOutOfBound:I=!0}={}){this.iso=new E.__IsotonicRegression(A,Q,g,I),B(this.iso)}fit(A,Q,C){let t=C;void 0===C&&(t=new Array(A.length).fill(1)),this.__checkFitParam(A,Q,t);let r=B(I(E.xArrayID,A)),n=B(I(E.yArrayID,Q)),e=B(I(E.wArrayID,t));this.iso.fit(r,n,e),g(r),g(n),g(e)}predict(A){let Q=B(I(E.newXArrayID,A)),t=this.iso.predict(Q),r=C(t);return g(Q),r}reset(){this.iso.reset()}destroy(){g(this.iso)}get xThresholds(){return C(this.iso.xThresholds)}get yThresholds(){return C(this.iso.yThresholds)}get xMin(){return this.iso.xMin}get xMax(){return this.iso.xMax}__checkFitParam(A,Q,E){if(A.length<=1||Q.length<=1||E.length<=1)throw new Error("The length of input arrays should be greater than 1.");if(A.length!==Q.length)throw new Error("The x array and y array should have the same length.")}}({increasing:A})}));export{o as initIsotonicRegression};
